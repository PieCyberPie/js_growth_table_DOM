{"mappings":"ACEA,SAAS,IACP,OAAO,SAAS,aAAa,CAAC,MAAM,QAAQ,CAAC,MAAM,AACrD,CAEA,SAAS,IACP,OAAO,SAAS,gBAAgB,CAAC,MAAM,MAAM,AAC/C,CAEA,SAAS,aAAa,CAAC,eAAe,gBAAgB,CAAC,QAAS,WAG9D,GAFA,SAAS,aAAa,CAAC,eAAe,eAAe,CAAC,YAElD,AAAY,GAAZ,IAAgB,CAGlB,IAAK,IAFC,EAAS,SAAS,aAAa,CAAC,MAE7B,EAAI,EAAG,EAAI,IAAc,IAAK,CACrC,IAAM,EAAU,SAAS,aAAa,CAAC,MAEvC,EAAO,WAAW,CAAC,EACrB,CACA,SAAS,aAAa,CAAC,UAAU,WAAW,CAAC,EAC/C,CAEkB,KAAd,KACF,SAAS,aAAa,CAAC,eAAe,YAAY,CAAC,WAAY,GAEnE,GAEA,SAAS,aAAa,CAAC,eAAe,gBAAgB,CAAC,QAAS,WAC9D,SAAS,aAAa,CAAC,eAAe,eAAe,CAAC,YAElD,IAAY,GAGd,AAFY,SAAS,aAAa,CAAC,MAE/B,MAAM,GAGM,IAAd,KACF,SAAS,aAAa,CAAC,eAAe,YAAY,CAAC,WAAY,GAEnE,GAEA,SAAS,aAAa,CAAC,kBAAkB,gBAAgB,CAAC,QAAS,WAGjE,GAFA,SAAS,aAAa,CAAC,kBAAkB,eAAe,CAAC,YAErD,AAAe,GAAf,IAAmB,CACrB,IAAM,EAAO,SAAS,gBAAgB,CAAC,MAElC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAmB,CAAnB,IAAM,EAAN,EAAA,KAAA,CACG,EAAU,SAAS,aAAa,CAAC,MAEvC,EAAI,WAAW,CAAC,EAClB,C,C,M,E,CAJK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAKP,CAEqB,KAAjB,KACF,SAAS,aAAa,CAAC,kBAAkB,YAAY,CAAC,WAAY,GAEtE,GAEA,SAAS,aAAa,CAAC,kBAAkB,gBAAgB,CAAC,QAAS,WAGjE,GAFA,SAAS,aAAa,CAAC,kBAAkB,eAAe,CAAC,YAErD,IAAe,EAAG,CACpB,IAAM,EAAO,SAAS,gBAAgB,CAAC,MAElC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,CAAA,CAAA,OAAA,QAAA,CAAA,GAAb,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EAAA,CAAK,IAAM,EAAN,EAAA,KAAA,CACH,EAAI,WAAW,CAAC,EAAI,aAAa,CAAC,M,C,C,M,E,CAD/B,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGP,CAEqB,IAAjB,KACF,SAAS,aAAa,CAAC,kBAAkB,YAAY,CAAC,WAAY,GAEtE","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction getColumns() {\n    return document.querySelector(\"tr\").children.length;\n}\nfunction getRows() {\n    return document.querySelectorAll(\"tr\").length;\n}\ndocument.querySelector(\".append-row\").addEventListener(\"click\", function() {\n    document.querySelector(\".remove-row\").removeAttribute(\"disabled\");\n    if (getRows() < 10) {\n        var newRow = document.createElement(\"tr\");\n        for(var i = 0; i < getColumns(); i++){\n            var newCell = document.createElement(\"td\");\n            newRow.appendChild(newCell);\n        }\n        document.querySelector(\".field\").appendChild(newRow);\n    }\n    if (getRows() === 10) document.querySelector(\".append-row\").setAttribute(\"disabled\", \"\");\n});\ndocument.querySelector(\".remove-row\").addEventListener(\"click\", function() {\n    document.querySelector(\".append-row\").removeAttribute(\"disabled\");\n    if (getRows() > 2) {\n        var row = document.querySelector(\"tr\");\n        row.remove();\n    }\n    if (getRows() === 2) document.querySelector(\".remove-row\").setAttribute(\"disabled\", \"\");\n});\ndocument.querySelector(\".append-column\").addEventListener(\"click\", function() {\n    document.querySelector(\".remove-column\").removeAttribute(\"disabled\");\n    if (getColumns() < 10) {\n        var rows = document.querySelectorAll(\"tr\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                var newCell = document.createElement(\"td\");\n                row.appendChild(newCell);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    if (getColumns() === 10) document.querySelector(\".append-column\").setAttribute(\"disabled\", \"\");\n});\ndocument.querySelector(\".remove-column\").addEventListener(\"click\", function() {\n    document.querySelector(\".append-column\").removeAttribute(\"disabled\");\n    if (getColumns() > 2) {\n        var rows = document.querySelectorAll(\"tr\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.removeChild(row.querySelector(\"td\"));\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    if (getColumns() === 2) document.querySelector(\".remove-column\").setAttribute(\"disabled\", \"\");\n});\n\n//# sourceMappingURL=index.9b03c944.js.map\n","'use strict';\n\nfunction getColumns() {\n  return document.querySelector('tr').children.length;\n}\n\nfunction getRows() {\n  return document.querySelectorAll('tr').length;\n}\n\ndocument.querySelector('.append-row').addEventListener('click', () => {\n  document.querySelector('.remove-row').removeAttribute('disabled');\n\n  if (getRows() < 10) {\n    const newRow = document.createElement('tr');\n\n    for (let i = 0; i < getColumns(); i++) {\n      const newCell = document.createElement('td');\n\n      newRow.appendChild(newCell);\n    }\n    document.querySelector('.field').appendChild(newRow);\n  }\n\n  if (getRows() === 10) {\n    document.querySelector('.append-row').setAttribute('disabled', '');\n  }\n});\n\ndocument.querySelector('.remove-row').addEventListener('click', () => {\n  document.querySelector('.append-row').removeAttribute('disabled');\n\n  if (getRows() > 2) {\n    const row = document.querySelector('tr');\n\n    row.remove();\n  }\n\n  if (getRows() === 2) {\n    document.querySelector('.remove-row').setAttribute('disabled', '');\n  }\n});\n\ndocument.querySelector('.append-column').addEventListener('click', () => {\n  document.querySelector('.remove-column').removeAttribute('disabled');\n\n  if (getColumns() < 10) {\n    const rows = document.querySelectorAll('tr');\n\n    for (const row of rows) {\n      const newCell = document.createElement('td');\n\n      row.appendChild(newCell);\n    }\n  }\n\n  if (getColumns() === 10) {\n    document.querySelector('.append-column').setAttribute('disabled', '');\n  }\n});\n\ndocument.querySelector('.remove-column').addEventListener('click', () => {\n  document.querySelector('.append-column').removeAttribute('disabled');\n\n  if (getColumns() > 2) {\n    const rows = document.querySelectorAll('tr');\n\n    for (const row of rows) {\n      row.removeChild(row.querySelector('td'));\n    }\n  }\n\n  if (getColumns() === 2) {\n    document.querySelector('.remove-column').setAttribute('disabled', '');\n  }\n});\n"],"names":["getColumns","document","querySelector","children","length","getRows","querySelectorAll","addEventListener","removeAttribute","newRow","createElement","i","newCell","appendChild","setAttribute","row","remove","rows","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","removeChild"],"version":3,"file":"index.9b03c944.js.map"}